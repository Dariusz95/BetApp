// <auto-generated />
using System;
using BetApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BetApp.Migrations.Bet
{
    [DbContext(typeof(BetContext))]
    [Migration("20230803200140_ChangeCouponDb")]
    partial class ChangeCouponDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BetApp.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Course")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsCouponWin")
                        .HasColumnType("boolean");

                    b.Property<int>("PotentialWinValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("BetApp.Models.MatchResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Counter")
                        .HasColumnType("integer");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsWin")
                        .HasColumnType("boolean");

                    b.Property<Guid>("TeamAId")
                        .HasColumnType("uuid");

                    b.Property<int>("TeamAScore")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeamBId")
                        .HasColumnType("uuid");

                    b.Property<int>("TeamBScore")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("TeamAId");

                    b.HasIndex("TeamBId");

                    b.ToTable("MatchResults");
                });

            modelBuilder.Entity("BetApp.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d90cc67-653d-42f2-aff9-5029027b1c9f"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/FC_Internazionale_Milano_2021.svg/2048px-FC_Internazionale_Milano_2021.svg.png",
                            Name = "Intor Mediolan",
                            Power = 90
                        },
                        new
                        {
                            Id = new Guid("6ed638d1-7a59-4ba9-9aa2-e2014118c9b6"),
                            ImageUrl = "https://assets.stickpng.com/images/584a9b3bb080d7616d298777.png",
                            Name = "FC.Barceluna",
                            Power = 75
                        },
                        new
                        {
                            Id = new Guid("c37199c3-aaff-4f91-b50e-24a7ea568910"),
                            ImageUrl = "https://logodownload.org/wp-content/uploads/2017/02/manchester-city-fc-logo-escudo-badge.png",
                            Name = "Manchester Citi",
                            Power = 90
                        },
                        new
                        {
                            Id = new Guid("677af38f-298b-498b-88f2-fff9aad335fa"),
                            ImageUrl = "url_druzyny_c",
                            Name = "Lagia Warszawa",
                            Power = 100
                        },
                        new
                        {
                            Id = new Guid("685339d6-5f7c-4e3f-8f9f-2b8a04859adb"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/hif/f/ff/Manchester_United_FC_crest.png",
                            Name = "Manchuster United",
                            Power = 65
                        },
                        new
                        {
                            Id = new Guid("e62642bb-7adb-4fa4-b9be-e573b5728fe3"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Juventus_Logo.png/1200px-Juventus_Logo.png",
                            Name = "Juventus Turin",
                            Power = 78
                        });
                });

            modelBuilder.Entity("BetApp.Models.MatchResult", b =>
                {
                    b.HasOne("BetApp.Models.Coupon", "Coupon")
                        .WithMany("MatchResults")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BetApp.Models.Team", "TeamA")
                        .WithMany()
                        .HasForeignKey("TeamAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BetApp.Models.Team", "TeamB")
                        .WithMany()
                        .HasForeignKey("TeamBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("TeamA");

                    b.Navigation("TeamB");
                });

            modelBuilder.Entity("BetApp.Models.Coupon", b =>
                {
                    b.Navigation("MatchResults");
                });
#pragma warning restore 612, 618
        }
    }
}
